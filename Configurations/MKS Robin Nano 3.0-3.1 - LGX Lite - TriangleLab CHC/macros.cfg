#  __  __                          
# |  \/  |                         
# | \  / | __ _  ___ _ __ ___  ___ 
# | |\/| |/ _` |/ __| '__/ _ \/ __|
# | |  | | (_| | (__| | | (_) \__ \
# |_|  |_|\__,_|\___|_|  \___/|___/
#
# Configurations Macros - Flsun Super Racer
# Version 3.0
#
# Guislain Cyril


##################################################
# G-Code de Démarrage / de Fin
##################################################

[gcode_macro START_PRINT]
description: G-Code de démarrage
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
  G21
  G90
  M82
  {% if printer.extruder.target != 0 %}
  M104 S{EXTRUDER_TEMP}
  {% else %}
  M104 S150
  {% endif %}
  M140 S{BED_TEMP}
  {% if printer.toolhead.homed_axes != "xyz" %}
  G28
  {% endif %}
  G1 Z270 F2500
  G1 X-130 F2500
  M190 S{BED_TEMP}
  M109 S{EXTRUDER_TEMP}
  G1 Z1 F2500
  G1 X-130 Y0 Z0.4
  G92 E0
  G3 X0 Y-130 I130 J1 Z0.3 E40 F1500
  G92 E0
  G1 E-1.5 F1800


[gcode_macro END_PRINT]
description: G-Code de fin
gcode:
  M106 S0
  M104 S0
  M140 S0
  G92 E0
  G91
  G1 E-1 F300
  G1 Z+5 F6000
  G28
  G90
  M84


##################################################
# Pause / Reprise / Annulation de l'impression
##################################################

[gcode_macro PAUSE]
description: Mettre en pause l'impression en cours
rename_existing: PAUSE_BASE
gcode:
  ##### set defaults #####
  {% set x = params.X|default(0) %}
  {% set y = params.Y|default(-122) %}
  {% set z = params.Z|default(10)|float %}
  {% set e = params.E|default(1) %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% set lift_z = z|abs %}
  {% if act_z < (max_z - lift_z) %}
  {% set z_safe = lift_z %}
  {% else %}
  {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  RESPOND MSG="Mise en pause..."
  PAUSE_BASE
  G91
  G1 E-{e} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x} Y{y} F2500


[gcode_macro RESUME]
description: Reprendre l'impression en cours
rename_existing: RESUME_BASE
gcode:
  ##### set defaults #####
  {% set e = params.E|default(1) %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
  {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {% else %}
  {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  G91
  {% if printer["gcode_macro M600"].m600_enabled == 1 %}
  RESPOND MSG="Chauffe de la buse..."
  M109 S{printer["gcode_macro M600"].hotend_temp}
  M106 S{printer["gcode_macro M600"].fan_speed}
  RESPOND MSG="Chargement du filament..."
  G0 E70 F800
  G0 E20 F300
  M400
  SET_GCODE_VARIABLE MACRO=M600 VARIABLE=m600_enabled VALUE=0
  {% else %}
  G1 E{e} F2100
  {% endif %}
  RESPOND MSG="Reprise de l'impression..."
  SET_IDLE_TIMEOUT TIMEOUT=1800
  RESUME_BASE {get_params}


[gcode_macro CANCEL_PRINT]
description: Annuler l'impression en cours
rename_existing: CANCEL_PRINT_BASE
gcode:
  RESPOND MSG="Impression interrompue !"
  G28
  M106 S0
  M104 S0
  M140 S0
  CANCEL_PRINT_BASE


##################################################
# Changement de Filament / Couleur
##################################################
  
[gcode_macro M600]
description: Changement de filament / couleur
variable_hotend_temp: 0
variable_m600_enabled: 0
variable_fan_speed: 0
gcode:
  ##### set defaults #####
  {% set x = params.X|default(0) %}
  {% set y = params.Y|default(-122) %}
  {% set z = params.Z|default(10)|float %}
  {% set e = params.E|default(1) %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% set lift_z = z|abs %}
  {% if act_z < (max_z - lift_z) %}
  {% set z_safe = lift_z %}
  {% else %}
  {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=M600_state
  SET_IDLE_TIMEOUT TIMEOUT=86400
  SET_GCODE_VARIABLE MACRO=M600 VARIABLE=m600_enabled VALUE=1
  SET_GCODE_VARIABLE MACRO=M600 VARIABLE=hotend_temp VALUE={printer.extruder.target}
  SET_GCODE_VARIABLE MACRO=M600 VARIABLE=fan_speed VALUE={printer.fan.speed}
  RESPOND MSG="Mise en pause..."
  PAUSE
  G91
  G1 E-{e} F2100
  G1 Z{z_safe}
  G90
  G1 X{x} Y{y} F2500
  RESPOND MSG="Retrait du filament..."
  G91
  G0 E-5 F300
  G0 E-70 F800
  M400
  RESPOND MSG="Arrêt de la chauffe de la buse !"
  M104 S0
  M106 S0
  RESTORE_GCODE_STATE NAME=M600_state
  
  
##################################################
# Chargement / Retrait du filament
##################################################

[gcode_macro UNLOAD_FILAMENT]
description: Retrait du filament
gcode:
  {% if printer.idle_timeout.state == "Printing" and not printer.pause_resume.is_paused %}
  RESPOND TYPE=error MSG="Impossible de lancer cette macro actuellement !"
  {% else %}
  SAVE_GCODE_STATE NAME=unload_state
  {% if printer.extruder.temperature < 200 %}
  RESPOND MSG="Chauffe de la buse..."
  M109 S200
  {% endif %}
  RESPOND MSG="Retrait du filament..."
  G91
  G0 E2 F400
  G0 E-5 F800
  G0 E-70 F800
  RESTORE_GCODE_STATE NAME=unload_state
  {% endif %}


[gcode_macro LOAD_FILAMENT]
description: Chargement du filament
gcode:
  {% if printer.idle_timeout.state == "Printing" and not printer.pause_resume.is_paused %}
  RESPOND TYPE=error MSG="Impossible de lancer cette macro actuellement !"
  {% else %}
  SAVE_GCODE_STATE NAME=load_state
  {% if printer.extruder.temperature < 200 %}
  RESPOND MSG="Chauffe de la buse..."
  M109 S200
  {% endif %}
  RESPOND MSG="Chargement du filament..."
  G91
  G0 E70 F300
  G0 E20 F200
  M400
  RESTORE_GCODE_STATE NAME=load_state
  {% endif %}


##################################################
# Calibrations
##################################################

[gcode_macro Z_OFFSET_CALIBRATION]
description: Mesuser le Z-Offset
gcode:
  SET_GCODE_OFFSET Z=0
  G28
  G1 X0 Y0 Z50 F2500
  M400
  PROBE_CALIBRATE


[gcode_macro ENDSTOPS_CALIBRATION]
description: Calibration EndStops
gcode:
  {% if printer.idle_timeout.state == "Printing" %}
  RESPOND TYPE=error MSG="Impossible de lancer cette macro actuellement !"
  {% else %}
  {% if printer.toolhead.homed_axes != "xyz" %}
  G28
  {% endif %}
  G91
  G0 Z-70 F1500
  G28
  G91
  G0 Z-70 F1500
  G28
  G91
  G0 Z-70 F1500
  G28
  G91
  G0 Z-70 F1500
  G28
  G91
  G0 Z-70 F1500
  ENDSTOP_PHASE_CALIBRATE stepper=stepper_a
  ENDSTOP_PHASE_CALIBRATE stepper=stepper_b
  ENDSTOP_PHASE_CALIBRATE stepper=stepper_c
  M400
  G28
  {% endif %}


[gcode_macro DELTA_CALIBRATION]
description: Calibration Delta
gcode:
  {% if printer.idle_timeout.state == "Printing" %}
  RESPOND TYPE=error MSG="Impossible de lancer cette macro actuellement !"
  {% else %}
  SET_GCODE_OFFSET Z=0
  BED_MESH_CLEAR
  {% if printer.toolhead.homed_axes != "xyz" %}
  G28
  {% endif %}
  DELTA_CALIBRATE
  M400
  G1 X0 Y0 Z50 F2500
  G28
  {% endif %}


[gcode_macro BED_LEVELING]
description: Nivellement du plateau
gcode:
  {% if printer.idle_timeout.state == "Printing" %}
  RESPOND TYPE=error MSG="Impossible de lancer cette macro actuellement !"
  {% else %}
  SET_GCODE_OFFSET Z=0
  {% if printer.toolhead.homed_axes != "xyz" %}
  G28
  {% endif %}
  G1 X0 Y0 Z50 F2500
  BED_MESH_CALIBRATE
  M400
  G1 X0 Y0 Z50 F2500
  G28
  {% endif %}


[gcode_macro PRESSURE_ADVANCE]
description: Pressure Advance
gcode:
  {% if printer.idle_timeout.state == "Printing" %}
  RESPOND TYPE=error MSG="Impossible de lancer cette macro actuellement !"
  {% else %}
  SET_PRESSURE_ADVANCE ADVANCE=0   
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
  TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.005
  {% endif %}


##################################################
# Calibration du PID Buse / Plateau
##################################################

[gcode_macro PID_BED]
description: PID Plateau
gcode:
  {% if printer.idle_timeout.state == "Printing" %}
  RESPOND TYPE=error MSG="Impossible de lancer cette macro actuellement !"
  {% else %}
  RESPOND MSG="Calibration PID du plateau en cours..."
  G28
  G90
  G1 Z50 F1500
  M400
  M106
  PID_CALIBRATE HEATER=heater_bed TARGET={params.TEMP|default(65)}
  RESPOND MSG="Calibration PID terminée !  Pensez à sauvegarder la configuration !"
  M107
  G28
  {% endif %}


[gcode_macro PID_HOTEND]
description: PID Hotend
gcode:
  {% if printer.idle_timeout.state == "Printing" %}
  RESPOND TYPE=error MSG="Impossible de lancer cette macro actuellement !"
  {% else %}
  RESPOND MSG="Calibration PID de la buse en cours..."
  G28
  G90
  G1 Z50 F1500
  M400
  M106
  PID_CALIBRATE HEATER=extruder TARGET={params.TEMP|default(220)}
  RESPOND MSG="Calibration PID terminée !  Pensez à sauvegarder la configuration !"
  M107
  G28
  {% endif %}
  

[gcode_macro _PID_KS_START]
description: PID pour KlipperScreen
gcode:
  RESPOND MSG="Calibration PID en cours..."
  G28
  G90
  G1 Z50 F1500
  M400
  M106


[gcode_macro _PID_KS_END]
description: PID pour KlipperScreen
gcode:
  M107
  RESPOND MSG="Calibration PID terminée ! Pensez à sauvegarder la configuration !"
  G28


##################################################
# Vérifications et Mesures avec l'ADXL
##################################################

[gcode_macro ADXL_TEST]
description: Test de l'ADXL
gcode:
  ACCELEROMETER_QUERY


[gcode_macro ADXL_NOISE]
description: Mesurer le bruit de l'accéléromètre
gcode:
  MEASURE_AXES_NOISE


[gcode_macro ADXL_AXE_X]
description: Mesurer les résonances de l'axe X
gcode:
  G28
  M400
  SHAPER_CALIBRATE AXIS=X


[gcode_macro ADXL_AXE_Y]
description: Mesurer les résonances de l'axe Y
gcode:
  G28
  M400
  SHAPER_CALIBRATE AXIS=Y


##################################################
# Sauvegarde des paramètres
##################################################

[gcode_macro SAUVEGARDER]
description: Sauvegarder la configuration
gcode:
  SAVE_CONFIG


##################################################
# Gestion des contrôles du Slicer
##################################################

[gcode_macro M204]
description: Gère le contrôle d'accélération maximale
rename_existing: M204.1
gcode:
  {% if 'S' in params %}
  {% set s = params.S|float %}
  SET_VELOCITY_LIMIT ACCEL={s}
  {% else %}
  {% if 'P' in params %}
  {% set p = params.P|float %}
  {% if 'T' in params %}
  {% set t = params.T|float %}
  {% if p < t %}
  SET_VELOCITY_LIMIT ACCEL={p}
  {% else %}
  SET_VELOCITY_LIMIT ACCEL={t}
  {% endif %}
  {% else %}
  SET_VELOCITY_LIMIT ACCEL={p}
  {% endif %}
  {% elif 'T' in params %}
  {% set t = params.T|float %}
  SET_VELOCITY_LIMIT ACCEL={t}
  {% endif %}
  {% endif %}


[gcode_macro M205]
description: Gère le contrôle de la vitesse des angles droits
gcode:
  {% if 'X' in params %}
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}
  

##################################################
# Gestion des contrôles des Températures
##################################################

[gcode_macro M109]
description: Contrôle de la température de l'extrudeur
rename_existing: M99109
gcode:
  {% set s = params.S|float %}
  M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
  {% if s != 0 %}
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}
  {% endif %}


[gcode_macro M190]
description: Contrôle de la température du plateau
rename_existing: M99190
gcode:
  {% set s = params.S|float %}
  M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}
  {% if s != 0 %}
  TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}
  {% endif %}


##################################################
# Chargement du maillage par défaut au démarrage
##################################################

[delayed_gcode BED_MESH_INIT]
initial_duration: .01
gcode:
  BED_MESH_PROFILE LOAD=default


##################################################
# Gestion du Z-Offset
##################################################

[gcode_macro SECURITY_OFFSET]
description: Appliquer un Offset de sécurité de 1mm
gcode:
  SET_GCODE_OFFSET Z=+1
  RESPOND MSG="Offset de sécurité appliqué !"


[gcode_macro SET_GCODE_OFFSET]
description: Sauvegarde du Z-Offset
rename_existing: _SET_GCODE_OFFSET
gcode:
  {% if printer.save_variables.variables.zoffset %}
  {% set zoffset = printer.save_variables.variables.zoffset %}
  {% else %}
  {% set zoffset = {'z': None} %}
  {% endif %}
  {% set ns = namespace(zoffset={'z': zoffset.z}) %}
  _SET_GCODE_OFFSET {% for p in params %}{'%s=%s '% (p, params[p])}{% endfor %}
  {%if 'Z' in params %}{% set null = ns.zoffset.update({'z': params.Z}) %}{% endif %}
  {%if 'Z_ADJUST' in params %}
  {%if ns.zoffset.z == None %}{% set null = ns.zoffset.update({'z': 0}) %}{% endif %}
  {% set null = ns.zoffset.update({'z': (ns.zoffset.z | float) + (params.Z_ADJUST | float)}) %}
  {% endif %}
  SAVE_VARIABLE VARIABLE=zoffset VALUE="{ns.zoffset}"


[delayed_gcode LOAD_GCODE_OFFSETS]
initial_duration: 2
gcode:
  {% if printer.save_variables.variables.zoffset %}
  {% set zoffset = printer.save_variables.variables.zoffset %}
  _SET_GCODE_OFFSET {% for axis, offset in zoffset.items() if zoffset[axis] %}{ "%s=%s " % (axis, offset) }{% endfor %}
  RESPOND TYPE=command MSG="Z-Offset chargé depuis variables.cfg : {zoffset.z}mm"
  {% endif %}
